Classfile /Users/cjw/Library/Mobile Documents/com~apple~CloudDocs/workspace/JavaCompiler/ComplexOperation.class
  Last modified 2019-5-22; size 1400 bytes
  MD5 checksum 556dbdc1c7ec530eb67c07bc751795c7
public class ComplexOperation
  minor version: 0
  major version: 50
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Utf8               ComplexOperation
   #2 = Class              #1             // ComplexOperation
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               ComplexOperation$Complex
   #6 = Class              #5             // ComplexOperation$Complex
   #7 = Utf8               Complex
   #8 = Utf8               main
   #9 = Utf8               ([Ljava/lang/String;)V
  #10 = Utf8               test
  #11 = Utf8               ()V
  #12 = Utf8               <init>
  #13 = NameAndType        #12:#11        // "<init>":()V
  #14 = Methodref          #6.#13         // ComplexOperation$Complex."<init>":()V
  #15 = Integer            3
  #16 = Utf8               real
  #17 = Utf8               I
  #18 = NameAndType        #16:#17        // real:I
  #19 = Fieldref           #6.#18         // ComplexOperation$Complex.real:I
  #20 = Integer            4
  #21 = Utf8               imagine
  #22 = NameAndType        #21:#17        // imagine:I
  #23 = Fieldref           #6.#22         // ComplexOperation$Complex.imagine:I
  #24 = Integer            6
  #25 = Integer            8
  #26 = Utf8               add
  #27 = Utf8               (LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
  #28 = NameAndType        #26:#27        // add:(LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
  #29 = Methodref          #2.#28         // ComplexOperation.add:(LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
  #30 = Utf8               printComplex
  #31 = Utf8               (LComplexOperation/Complex;)V
  #32 = NameAndType        #30:#31        // printComplex:(LComplexOperation/Complex;)V
  #33 = Methodref          #2.#32         // ComplexOperation.printComplex:(LComplexOperation/Complex;)V
  #34 = Utf8               java/lang/System
  #35 = Class              #34            // java/lang/System
  #36 = Utf8               out
  #37 = Utf8               Ljava/io/PrintStream;
  #38 = NameAndType        #36:#37        // out:Ljava/io/PrintStream;
  #39 = Fieldref           #35.#38        // java/lang/System.out:Ljava/io/PrintStream;
  #40 = Utf8               \n
  #41 = String             #40            // \n
  #42 = Utf8               java/io/PrintStream
  #43 = Class              #42            // java/io/PrintStream
  #44 = Utf8               print
  #45 = Utf8               (Ljava/lang/String;)V
  #46 = NameAndType        #44:#45        // print:(Ljava/lang/String;)V
  #47 = Methodref          #43.#46        // java/io/PrintStream.print:(Ljava/lang/String;)V
  #48 = Utf8               sub
  #49 = NameAndType        #48:#27        // sub:(LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
  #50 = Methodref          #2.#49         // ComplexOperation.sub:(LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
  #51 = Utf8               mul
  #52 = NameAndType        #51:#27        // mul:(LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
  #53 = Methodref          #2.#52         // ComplexOperation.mul:(LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
  #54 = Utf8               div
  #55 = NameAndType        #54:#27        // div:(LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
  #56 = Methodref          #2.#55         // ComplexOperation.div:(LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
  #57 = Utf8               (I)V
  #58 = NameAndType        #44:#57        // print:(I)V
  #59 = Methodref          #43.#58        // java/io/PrintStream.print:(I)V
  #60 = Integer            0
  #61 = Utf8               +
  #62 = String             #61            // +
  #63 = Utf8               i
  #64 = String             #63            // i
  #65 = Utf8               java/lang/Throwable
  #66 = Class              #65            // java/lang/Throwable
  #67 = Utf8               <clinit>
  #68 = Utf8               Code
  #69 = Utf8               StackMapTable
  #70 = Utf8               InnerClasses
{
  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return

  public static void test();
    descriptor: ()V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=0
         0: new           #6                  // class ComplexOperation$Complex
         3: dup
         4: invokespecial #14                 // Method ComplexOperation$Complex."<init>":()V
         7: astore_0
         8: aload_0
         9: ldc           #15                 // int 3
        11: putfield      #19                 // Field ComplexOperation$Complex.real:I
        14: aload_0
        15: ldc           #20                 // int 4
        17: putfield      #23                 // Field ComplexOperation$Complex.imagine:I
        20: new           #6                  // class ComplexOperation$Complex
        23: dup
        24: invokespecial #14                 // Method ComplexOperation$Complex."<init>":()V
        27: astore_1
        28: aload_1
        29: ldc           #24                 // int 6
        31: putfield      #19                 // Field ComplexOperation$Complex.real:I
        34: aload_1
        35: ldc           #25                 // int 8
        37: putfield      #23                 // Field ComplexOperation$Complex.imagine:I
        40: aload_0
        41: aload_1
        42: invokestatic  #29                 // Method add:(LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
        45: invokestatic  #33                 // Method printComplex:(LComplexOperation/Complex;)V
        48: getstatic     #39                 // Field java/lang/System.out:Ljava/io/PrintStream;
        51: ldc           #41                 // String \n
        53: invokevirtual #47                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
        56: aload_0
        57: aload_1
        58: invokestatic  #50                 // Method sub:(LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
        61: invokestatic  #33                 // Method printComplex:(LComplexOperation/Complex;)V
        64: getstatic     #39                 // Field java/lang/System.out:Ljava/io/PrintStream;
        67: ldc           #41                 // String \n
        69: invokevirtual #47                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
        72: aload_0
        73: aload_1
        74: invokestatic  #53                 // Method mul:(LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
        77: invokestatic  #33                 // Method printComplex:(LComplexOperation/Complex;)V
        80: getstatic     #39                 // Field java/lang/System.out:Ljava/io/PrintStream;
        83: ldc           #41                 // String \n
        85: invokevirtual #47                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
        88: aload_0
        89: aload_1
        90: invokestatic  #56                 // Method div:(LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
        93: invokestatic  #33                 // Method printComplex:(LComplexOperation/Complex;)V
        96: getstatic     #39                 // Field java/lang/System.out:Ljava/io/PrintStream;
        99: ldc           #41                 // String \n
       101: invokevirtual #47                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
       104: return

  public static void printComplex(ComplexOperation.Complex);
    descriptor: (LComplexOperation/Complex;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #39                 // Field java/lang/System.out:Ljava/io/PrintStream;
         3: aload_0
         4: getfield      #19                 // Field ComplexOperation$Complex.real:I
         7: invokevirtual #59                 // Method java/io/PrintStream.print:(I)V
        10: aload_0
        11: getfield      #23                 // Field ComplexOperation$Complex.imagine:I
        14: ldc           #60                 // int 0
        16: if_icmple     23
        19: iconst_1
        20: goto          24
        23: iconst_0
        24: ifeq          56
        27: getstatic     #39                 // Field java/lang/System.out:Ljava/io/PrintStream;
        30: ldc           #62                 // String +
        32: invokevirtual #47                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
        35: getstatic     #39                 // Field java/lang/System.out:Ljava/io/PrintStream;
        38: aload_0
        39: getfield      #23                 // Field ComplexOperation$Complex.imagine:I
        42: invokevirtual #59                 // Method java/io/PrintStream.print:(I)V
        45: getstatic     #39                 // Field java/lang/System.out:Ljava/io/PrintStream;
        48: ldc           #64                 // String i
        50: invokevirtual #47                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
        53: goto          94
        56: aload_0
        57: getfield      #23                 // Field ComplexOperation$Complex.imagine:I
        60: ldc           #60                 // int 0
        62: if_icmpge     69
        65: iconst_1
        66: goto          70
        69: iconst_0
        70: ifeq          94
        73: getstatic     #39                 // Field java/lang/System.out:Ljava/io/PrintStream;
        76: aload_0
        77: getfield      #23                 // Field ComplexOperation$Complex.imagine:I
        80: invokevirtual #59                 // Method java/io/PrintStream.print:(I)V
        83: getstatic     #39                 // Field java/lang/System.out:Ljava/io/PrintStream;
        86: ldc           #64                 // String i
        88: invokevirtual #47                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
        91: goto          94
        94: return
      StackMapTable: number_of_entries = 6
        frame_type = 23 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 31 /* same */
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 23 /* same */

  public static ComplexOperation.Complex add(ComplexOperation.Complex, ComplexOperation.Complex);
    descriptor: (LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=3, args_size=2
         0: new           #6                  // class ComplexOperation$Complex
         3: dup
         4: invokespecial #14                 // Method ComplexOperation$Complex."<init>":()V
         7: astore_2
         8: aload_2
         9: aload_0
        10: getfield      #19                 // Field ComplexOperation$Complex.real:I
        13: aload_1
        14: getfield      #19                 // Field ComplexOperation$Complex.real:I
        17: iadd
        18: putfield      #19                 // Field ComplexOperation$Complex.real:I
        21: aload_2
        22: aload_0
        23: getfield      #23                 // Field ComplexOperation$Complex.imagine:I
        26: aload_1
        27: getfield      #23                 // Field ComplexOperation$Complex.imagine:I
        30: iadd
        31: putfield      #23                 // Field ComplexOperation$Complex.imagine:I
        34: aload_2
        35: areturn
        36: nop
        37: athrow
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 36
          locals = []
          stack = [ class java/lang/Throwable ]

  public static ComplexOperation.Complex sub(ComplexOperation.Complex, ComplexOperation.Complex);
    descriptor: (LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=3, args_size=2
         0: new           #6                  // class ComplexOperation$Complex
         3: dup
         4: invokespecial #14                 // Method ComplexOperation$Complex."<init>":()V
         7: astore_2
         8: aload_2
         9: aload_0
        10: getfield      #19                 // Field ComplexOperation$Complex.real:I
        13: aload_1
        14: getfield      #19                 // Field ComplexOperation$Complex.real:I
        17: isub
        18: putfield      #19                 // Field ComplexOperation$Complex.real:I
        21: aload_2
        22: aload_0
        23: getfield      #23                 // Field ComplexOperation$Complex.imagine:I
        26: aload_1
        27: getfield      #23                 // Field ComplexOperation$Complex.imagine:I
        30: isub
        31: putfield      #23                 // Field ComplexOperation$Complex.imagine:I
        34: aload_2
        35: areturn
        36: nop
        37: athrow
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 36
          locals = []
          stack = [ class java/lang/Throwable ]

  public static ComplexOperation.Complex mul(ComplexOperation.Complex, ComplexOperation.Complex);
    descriptor: (LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #6                  // class ComplexOperation$Complex
         3: dup
         4: invokespecial #14                 // Method ComplexOperation$Complex."<init>":()V
         7: astore_2
         8: aload_2
         9: aload_0
        10: getfield      #19                 // Field ComplexOperation$Complex.real:I
        13: aload_1
        14: getfield      #19                 // Field ComplexOperation$Complex.real:I
        17: aload_0
        18: getfield      #23                 // Field ComplexOperation$Complex.imagine:I
        21: isub
        22: imul
        23: aload_1
        24: getfield      #23                 // Field ComplexOperation$Complex.imagine:I
        27: imul
        28: putfield      #19                 // Field ComplexOperation$Complex.real:I
        31: aload_2
        32: aload_0
        33: getfield      #19                 // Field ComplexOperation$Complex.real:I
        36: aload_1
        37: getfield      #23                 // Field ComplexOperation$Complex.imagine:I
        40: aload_0
        41: getfield      #23                 // Field ComplexOperation$Complex.imagine:I
        44: iadd
        45: imul
        46: aload_1
        47: getfield      #19                 // Field ComplexOperation$Complex.real:I
        50: imul
        51: putfield      #23                 // Field ComplexOperation$Complex.imagine:I
        54: aload_2
        55: areturn
        56: nop
        57: athrow
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 56
          locals = []
          stack = [ class java/lang/Throwable ]

  public static ComplexOperation.Complex div(ComplexOperation.Complex, ComplexOperation.Complex);
    descriptor: (LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=5, args_size=2
         0: new           #6                  // class ComplexOperation$Complex
         3: dup
         4: invokespecial #14                 // Method ComplexOperation$Complex."<init>":()V
         7: astore_2
         8: aload_2
         9: aload_1
        10: getfield      #19                 // Field ComplexOperation$Complex.real:I
        13: putfield      #19                 // Field ComplexOperation$Complex.real:I
        16: aload_2
        17: aload_1
        18: getfield      #23                 // Field ComplexOperation$Complex.imagine:I
        21: putfield      #23                 // Field ComplexOperation$Complex.imagine:I
        24: aload_1
        25: aload_2
        26: invokestatic  #53                 // Method mul:(LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
        29: getfield      #19                 // Field ComplexOperation$Complex.real:I
        32: istore_3
        33: aload_0
        34: aload_2
        35: invokestatic  #53                 // Method mul:(LComplexOperation/Complex;LComplexOperation/Complex;)LComplexOperation/Complex;
        38: astore        4
        40: aload         4
        42: aload         4
        44: getfield      #19                 // Field ComplexOperation$Complex.real:I
        47: iload_3
        48: idiv
        49: putfield      #19                 // Field ComplexOperation$Complex.real:I
        52: aload         4
        54: aload         4
        56: getfield      #23                 // Field ComplexOperation$Complex.imagine:I
        59: iload_3
        60: idiv
        61: putfield      #23                 // Field ComplexOperation$Complex.imagine:I
        64: aload         4
        66: areturn
        67: nop
        68: athrow
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 67
          locals = []
          stack = [ class java/lang/Throwable ]

  static {};
    descriptor: ()V
    flags: ACC_STATIC
    Code:
      stack=0, locals=0, args_size=0
         0: return
}
InnerClasses:
     public static #7= #6 of #2; //Complex=class ComplexOperation$Complex of class ComplexOperation
